#!/usr/bin/env python
import sys
import logging
import os
import subprocess

THRESHOLD = 100
logger = logging.getLogger("ctags_trigger")
hdlr = logging.FileHandler('/var/tmp/ctags_trigger.log')
shdlr = logging.StreamHandler()
formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
logger.addHandler(hdlr)
logger.addHandler(shdlr)
hdlr.setFormatter(formatter)
logger.setLevel(logging.DEBUG)
class Sensible(object):
  def __init__(self, root, files):
    self.files = [os.path.join(root, file) for file in files]
    self.mapping = {}
    self.__build()

  def __get_root(self, filename):
    base, file_name = os.path.split(filename)
    if base == '/' or base == os.path.expanduser("~/"):
      return None
    elif base == os.path.expanduser("~/.pyenv/versions") and os.path.isdir(filename):
      return filename
    elif base == os.path.expanduser("~/.rbenv/versions") and os.path.isdir(filename):
      return filename
    elif os.path.isdir(os.path.join(base, ".git")):
      return base
    else:
      return self.__get_root(base)
  def __valid_path(self, filename):
    valid = not (os.path.split(filename)[1] in ['tags', 'tags.tmp'] or filename.find(".git") > 0 or os.path.isdir(filename))
    logger.info("%s: %d" % (filename, valid))
    return valid

  def __build(self):
    for file in self.files:
      if self.__valid_path(file):
        root = self.__get_root(file)
        if root:
          self.mapping.setdefault(root, []).append(file)

def main(root, files_changed):
  sensible = Sensible(root, files_changed)
  for root in sensible.mapping:
    if os.path.isdir(root):
      os.chdir(root)
      files = sensible.mapping[root]

      args = ["ctags", "-a"]
      if len(files) > THRESHOLD or not os.path.isfile(os.path.join(root, "tags")):
        args += ['-R', '.']
      else:
        args += files
      logger.info("Ctagging in  (%s) with %s" % (root, " ".join(args)))
      proc = subprocess.Popen(args, cwd=root)
      proc.wait()
    else:
      logger.info("nothing to do. %s does not exist" % root)



main(sys.argv[1], sys.argv[2:])
